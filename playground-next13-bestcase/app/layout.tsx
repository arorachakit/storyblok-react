import { storyblokInit, apiPlugin } from "@storyblok/react/rsc";
import StoryblokProvider from "../components/StoryblokProvider";

import { headers } from "next/headers";

import Page from "../components/Page";
import Teaser from "../components/Teaser";

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
interface RootLayoutType {
  children: React.ReactNode;
}

export default function RootLayout({ children }: RootLayoutType) {
  const headersList = headers();
  const header_url = headersList.get("x-url"); // Coming from the middleware

  if (header_url.includes("_storyblok_tk")) {
    // If inside the Visual Editor
    storyblokInit({
      accessToken: "ExrmykhjqnuEWjKBR4Nt1Att", // using preview token
      use: [apiPlugin],
    });
    return (
      // using Storyblok Provider
      <StoryblokProvider>
        <html lang="en">
          <body>{children}</body>
        </html>
      </StoryblokProvider>
    );
  } else {
    // if not inside Visual Editor / On Prod
    storyblokInit({
      accessToken: "yP1FPV25iTlL8TazUnsKPwtt", // Using public token
      use: [apiPlugin],
      components: {
        teaser: Teaser,
        page: Page,
      },
      bridge: false, // not initalizing the bridge
    });
    return (
      <html lang="en">
        <body>{children}</body>
        {/* Not using Bridge loader */}
      </html>
    );
  }
}
